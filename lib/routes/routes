import 'package:flutter/material.dart';
import 'package:flutter_starter/screens/home_screen.dart';
import 'package:flutter_starter/screens/not_found_screen.dart';
import 'package:flutter_starter/screens/splash_screen.dart';
import 'package:flutter_starter/screens/start_screen.dart';

/**
 * RouteGenerator
 *
 * Was ist das?
 * Der RouteGenerator ist ein zentrales Konzept in der Navigation von Flutter-Apps.
 * Hier definieren wir **Named Routes**, also benannte Routen, mit denen wir zwischen verschiedenen Seiten (Screens) wechseln können.
 * 
 * Vorteile von Named Routes:
 * - Sauberer und übersichtlicher Code, weil wir den Namen der Route nutzen, statt direkt mit Widgets zu navigieren.
 * - Flexibilität: Wir können zentrale Einstellungen, wie Animationen, für alle Routen an einer Stelle verwalten.
 * 
 * Was passiert hier genau?
 * 1. Wir definieren für jede Seite in der App eine Route (z. B. `/home`, `/start`).
 * 2. Die Methode `generateRoute` nimmt den Namen der Route und liefert die passende Seite zurück.
 * 3. Optional: Wir verwenden eine Transition (Animation), die den Übergang zwischen den Seiten steuert.
 */
class RouteGenerator {
  /**
   * generateRoute
   *
   * Diese Methode wird immer aufgerufen, wenn eine benannte Route (`Navigator.pushNamed`) verwendet wird.
   * Sie entscheidet, welche Seite basierend auf dem Namen (`settings.name`) angezeigt wird.
   *
   * @param settings - Enthält Informationen zur Route, wie den Namen und evtl. übergebene Parameter.
   * @return Eine Route mit der entsprechenden Seite.
   */
  static Route<dynamic> generateRoute(RouteSettings settings) {
    switch (settings.name) {
      case '/':
        // Die Startseite wird angezeigt
        return _buildPageRoute(const SplashScreen(), settings);
      case '/start':
        // Zeige die Seite für den Startscreen
        return _buildPageRoute(const StartScreen(), settings);
      case '/home':
        // Zeige die Hauptseite (HomeScreen)
        return _buildPageRoute(const HomeScreen(), settings);
      default:
        // Wenn die Route nicht bekannt ist, wird eine "404 Not Found"-Seite angezeigt
        return _buildPageRoute(const NotFoundScreen(), settings);
    }
  }

  /**
   * _buildPageRoute
   *
   * Erstellt eine Route mit einer benutzerdefinierten Animation (Transition).
   * 
   * @param page - Das Widget (die Seite), die angezeigt werden soll.
   * @param settings - Route-Einstellungen (z. B. Name oder übergebene Daten).
   * @return Eine PageRouteBuilder-Instanz mit Animation.
   */
  static PageRouteBuilder _buildPageRoute(Widget page, RouteSettings settings) {
    return PageRouteBuilder(
      settings: settings, // Übergibt Route-Informationen
      pageBuilder: (context, animation, secondaryAnimation) => page,
      /**
       * transitionsBuilder
       *
       * Steuert, wie die Seiten-Übergänge animiert werden.
       * In diesem Fall: Eine Slide-Animation von rechts nach links.
       * 
       * @param animation - Die Animation, die die Dauer und den Fortschritt steuert.
       * @param secondaryAnimation - Für zukünftige Animationen zwischen mehreren Seiten (hier nicht verwendet).
       * @param child - Das Ziel-Widget, das animiert angezeigt wird.
       */
      transitionsBuilder: (context, animation, secondaryAnimation, child) {
        // Startpunkt der Animation: außerhalb des Bildschirms (rechts)
        const begin = Offset(1.0, 0.0); 
        // Endpunkt der Animation: sichtbar (in der Mitte des Bildschirms)
        const end = Offset.zero;
        // Kurve: Sanfte Beschleunigung und Abbremsung
        const curve = Curves.easeInOut;

        // Erstelle eine Animation zwischen dem Start- und Endpunkt
        var tween =
            Tween(begin: begin, end: end).chain(CurveTween(curve: curve));
        var offsetAnimation = animation.drive(tween);

        // SlideTransition bewegt das Widget entsprechend der Animation
        return SlideTransition(
          position: offsetAnimation, // Die animierte Position
          child: child, // Das Ziel-Widget (page)
        );
      },
    );
  }
}